import org.apache.tools.ant.filters.BaseFilterReader
import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath "org.xqdoc:xqdoc:1.9.6"
    }
}

plugins {
  id "net.saliman.properties" version "1.4.6"
  id "com.marklogic.ml-gradle" version "3.10.0"
}

repositories {
  jcenter()
  maven { url "http://developer.marklogic.com/maven2/" }
  maven { url "http://repository.cloudera.com/artifactory/cloudera-repos/" }
}

configurations {
  mlcp {
    resolutionStrategy {
      force "xml-apis:xml-apis:1.4.01"
    }
  }
}

dependencies {
    mlcp "com.marklogic:mlcp:9.0.6"
    mlcp files("marklogic/lib")
}

class XQDocFilter extends BaseFilterReader {
    XQDocFilter(Reader input) {
        super(new StringReader(new org.xqdoc.MarkLogicProcessor().process(input.text)))
    }
}

task generateXQDocs(type: Copy) {
  into 'xqDoc'
  from 'src/main/ml-modules'
  include '**/*.xqy'
  rename { it - '.xqy' + '.xml' } 
  includeEmptyDirs = false
  eachFile { println it }
  filter XQDocFilter
}

 task importXQDoc(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  database = "gradle-xqdoc-content"
  input_file_path = "xqDoc"
  output_collections = "xqdoc"
  output_uri_replace = ".*xqDoc,'/xqDoc'"
  document_type = "mixed"
}

/**
 * Polymer 
 */

task npmInstallXQDocXQRS(type: Exec) {
    String npm = 'npm';
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        npm = 'npm.cmd'
    }
    workingDir 'src/main/polymer/xqDoc/xqrs'
    commandLine npm, 'install'
}

task polymerBuildXQDocXQRS(type: Exec) {
    String polymer = 'polymer';
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        polymer = 'polymer.cmd'
    }
    workingDir 'src/main/polymer/xqDoc/xqrs'
    commandLine polymer, 'build'
}

task npmInstallXQDocMLServices(type: Exec) {
    String npm = 'npm';
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        npm = 'npm.cmd'
    }
    workingDir 'src/main/polymer/xqDoc/services'
    commandLine npm, 'install'
}

task polymerBuildXQDocMLServices(type: Exec) {
    String polymer = 'polymer';
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        polymer = 'polymer.cmd'
    }
    workingDir 'src/main/polymer/xqDoc/services'
    commandLine polymer, 'build'
}
